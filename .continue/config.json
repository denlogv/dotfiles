{
  "models": [
    {
      "title": "LM Studio",
      "provider": "openai",
      "model": "AUTODETECT",
      "apiBase": "http://127.0.0.1:1234/v1/",
      "contextLength": 32768,
      "apiKey": "not_needed"
    }
  ],
  "customCommands": [
    {
      "name": "test",
      "prompt": "{{{ input }}}\n\nWrite a comprehensive set of unit tests for the selected code. It should setup, run tests that check for correctness including important edge cases, and teardown. Ensure that the tests are complete and sophisticated. Give the tests just as chat output, don't edit any file.",
      "description": "Write unit tests for highlighted code"
    },
    {
      "name": "Docstrings for tests",
      "prompt": "{{{ input }}}\n\nWrite docstrings for tests in this file. Use the following standard to accomplish this:\n\nrepeat the function signature here\n\"\"\"Short description.\n\nPre-Condition: Describe shortly what has to be met before executing the test.\n\nAction: Describe shortly what is the main action in the test code.\n\nExpected Result: Describe shortly what the expectation of this test is.\n\"\"\"\n\nIf you see classes or methods that are helpers, then you must write docstrings for them using the Google standard to accomplish this:\n\nrepeat the function signature here\n\"\"\"The short description.\n\nThe long description.\n\nArgs:\n    arg1 (str): Description of arg1\n\nReturns:\n    tuple[str, Any]: Description of the return value\n\"\"\"\n\nBe sure to use markdown for Python. It has to look like normal python code, just replace actual implementation with pass.",
      "description": "Generate docstrings for current file"
    },
    {
      "name": "Docstrings for code",
      "prompt": "{{{ input }}}\n\nWrite docstrings for classes and methods in this file. Use the Google standard to accomplish this:\n\n\"\"\"The short description.\n\nThe long description.\n\nArgs:\n    arg1 (str): Description of arg1\n\nReturns:\n    tuple[str, Any]: Description of the return value\n\"\"\"",
      "description": "Generate docstrings for current file"
    }
  ],
  "completionOptions": {
    "maxTokens": 32765
  },
  "embeddingsProvider": {
    "title": "LM Studio - Embeddings",
    "provider": "openai",
    "model": "nomic-ai/nomic-embed-text-v1.5-GGUF/nomic-embed-text-v1.5.Q8_0.gguf",
    "apiBase": "http://localhost:1234/v1/"
  },
  "contextProviders": [
    {
      "name": "codebase",
      "params": {
        "nRetrieve": 25,
        "nFinal": 5,
        "useReranking": true
      }
    },
    {
      "name": "currentFile"
    },
    {
      "name": "open"
    },
    {
      "name": "file"
    },
    {
      "name": "web",
      "params": {
        "n": 5
      }
    },
    {
      "name": "clipboard"
    }
  ]
}
